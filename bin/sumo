#!/usr/bin/env ruby1.9

require File.dirname(__FILE__) + '/../lib/sumo'

require 'ec2'
require 'thor'
require 'yaml'

class CLI < Thor
	desc "launch", "launch an instance"
	def launch
		instance_id = Sumo.new.launch
		puts "#{instance_id} launched"
	end

	desc "ssh", "ssh to first instance"
	def ssh
		sumo = Sumo.new
		inst = sumo.list.select { |i| i[:status] == 'running' }.first
		if inst
			system "ssh -i #{sumo.keypair_file} root@#{inst[:hostname]}"
		else
			puts "No instances available for ssh"
		end
	end

	desc "bootstrap", "bootstrap chef and cookbooks"
	def bootstrap
		sumo = Sumo.new
		inst = sumo.list.select { |i| i[:status] == 'running' }.first
		raise "No instance running" unless inst

		role = 'couchdb'

		commands = [
			'apt-get update',
			'apt-get install -y ruby',
			'apt-get install -y ruby-dev',
			'apt-get install -y rubygems',
			'apt-get install -y git-core',
			'gem sources -a http://gems.opscode.com',
			'gem install chef ohai --no-rdoc --no-ri',
			"git clone #{sumo.config['cookbooks_url']}",
		]

		puts "---> Bootstrapping #{inst[:hostname]}"
		commands.each do |cmd|
			sumo.ssh(inst[:hostname], cmd)
		end
	end

	desc "role", "setup instance as a role"
	def role(role)
		sumo = Sumo.new
		inst = sumo.list.select { |i| i[:status] == 'running' }.first
		raise "No instance running" unless inst

		puts "---> Setting #{inst[:hostname]} to be #{role}"
		sumo.ssh(inst[:hostname], "cd chef-cookbooks && /var/lib/gems/1.8/bin/chef-solo -j roles/#{role}.json")
	end

	desc "list", "list running instances"
	def list
		instances = Sumo.new.list

		instances.each do |inst|
			printf "%-50s %-12s %s\n", inst[:hostname], inst[:instance_id], inst[:status]
		end
	end

	desc "terminate <instance_id>", "terminate an instance"
	def terminate(id)
		Sumo.new.terminate(id)
		puts "#{id} scheduled for termination"
	end
end

CLI.start
